package dcp039

import (
	"strings"
	"testing"
)

func TestGameOfLife(t *testing.T) {
	st := NewState([]Cell{
		{0, 0}, {0, 1}, {1, 0}, {1, 1}, {2, 2}, {2, 3}, {3, 2}, {3, 3}, // beacon
		{2, 6}, {2, 7}, {2, 8}, // blinker
		{9, 8}, {10, 8}, {11, 8}, {8, 9}, {9, 9}, {10, 9}, // toad
	})
	expected := []string{
		`..............
.##...........
.##...........
...##.........
...##.........
..............
..............
...#..........
...#..........
...#......###.
.........###..
..............
`,
		`..............
.##...........
.#............
....#.........
...##.........
..............
..............
..............
..###......#..
.........#..#.
.........#..#.
..........#...
..............
`,
		`..............
.##...........
.##...........
...##.........
...##.........
..............
..............
...#..........
...#..........
...#......###.
.........###..
..............
`,
	}
	for _, want := range expected {
		got := stateString(st)
		if got != want {
			t.Fatalf("got\n%s\nwant\n%s", got, want)
		}
		st = st.Next()
	}
}

func stateString(st *State) string {
	var sb strings.Builder
	printState(&sb, st, 1)
	return sb.String()
}
