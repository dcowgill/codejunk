/*

Each new term in the Fibonacci sequence is generated by adding the
previous two terms. By starting with 1 and 2, the first 10 terms will
be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not
exceed four million, find the sum of the even-valued terms.

*/
package p002

type fibs struct {
	a, b int
}

func newfibs() *fibs {
	return &fibs{0, 1}
}

func (s *fibs) next() int {
	s.a, s.b = s.b, s.a+s.b
	return s.a
}

func solve() int {
	sum := 0
	s := newfibs()
	for n := s.next(); n < 4000000; n = s.next() {
		if n%2 == 0 {
			sum += n
		}
	}
	return sum
}
